name: Deploy To Server
on:
  push:
    branches:
      - main

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SSH_KEY: ${{ secrets.SSH_SECRET_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        run: |
          # Setup SSH key
          mkdir -p ~/.ssh
          printf '%s\n' "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

          # Create .env file
          cat > .env << EOF
          RESEND_API_KEY=$RESEND_API_KEY
          EOF

          # Copy .env to server
          scp .env "$SERVER_USER@$SERVER_HOST:/home/ubuntu/app/.env"

          # Deploy via SSH
          ssh "$SERVER_USER@$SERVER_HOST" '
            set -e
            REPO_DIR=/home/ubuntu/app
            cd "$REPO_DIR"

            # Pull latest code (fails if not a git repo)
            git pull origin main || {
              echo "Git pull failed, cloning repo..."
              cd /home/ubuntu
              rm -rf app
              git clone https://github.com/graff012/rozoviy-sad.git app
            }

            # Rebuild Docker image and restart
            echo "Building new Docker image..."
            sudo docker stop nextjs-container || true
            sudo docker rm nextjs-container || true
            sudo docker rmi my-nextjs-app || true

            sudo docker build -t my-nextjs-app .
            
            sudo docker run -d \
              -p 3000:3000 \
              --name nextjs-container \
              --restart unless-stopped \
              my-nextjs-app

            echo "Deployment complete."
          '

      - name: Clean up SSH key
        run: rm -rf ~/.ssh
